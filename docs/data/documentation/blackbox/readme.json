{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"BlackBox provides convenience ways to log and measure what happens in your app:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Events;"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Errors;"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How much time it took to execute some code;"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"etc."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Moreover, you can redirect the logs wherever you want. Few destinations are supported out of the box, and you can easily add any other destination by yourself."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"BlackBox Supports:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 12 and newer;"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"macOS 10.14 and newer;"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tvOS 12 and newer;"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"watchOS 5 and newer."}]}]}]},{"anchor":"Installation","level":2,"type":"heading","text":"Installation"},{"anchor":"SPM","level":3,"type":"heading","text":"SPM"},{"type":"codeListing","syntax":"swift","code":["dependencies: [","    .package(","        url: \"https:\/\/github.com\/dodopizza\/BlackBox.git\", ","        .upToNextMajor(from: \"1.0.0\")","    )","]"]},{"anchor":"Carthage","level":3,"type":"heading","text":"Carthage"},{"type":"codeListing","syntax":"ogdl","code":["github \"dodopizza\/BlackBox\""]},{"anchor":"Usage","level":2,"type":"heading","text":"Usage"},{"type":"codeListing","syntax":"swift","code":["import BlackBox"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Simple message:"}]},{"type":"codeListing","syntax":"swift","code":["BlackBox.log(\"Hello world\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additional info:"}]},{"type":"codeListing","syntax":"swift","code":["BlackBox.log(\"Logged in\", userInfo: [\"userId\": someUserId])"]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not include sensitive data in logs"}]}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Category:"}]},{"type":"codeListing","syntax":"swift","code":["BlackBox.log(\"Logged in\", userInfo: [\"userId\": someUserId], category: \"App lifecycle\") \/\/ keep in mind to not include sensitive info in logs"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Custom log level:"}]},{"type":"codeListing","syntax":"swift","code":["BlackBox.log(\"Tried to open AuthScreen multiple times\", level: .warning)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Error:"}]},{"type":"codeListing","syntax":"swift","code":["enum ParsingError: Error {","    case unknownCategoryInDTO(rawValue: Int)","}","","BlackBox.log(ParsingError.unknownCategoryInDTO(rawValue: 9))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Measurements:"}]},{"type":"codeListing","syntax":"swift","code":["let log = BlackBox.logStart(\"Parse menu\")","let menuModel = MenuModel(dto: menuDto)","\/\/ any other hard work","BlackBox.logEnd(log)"]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use mix all of the above altogether"}]}],"type":"aside","name":"Tip"},{"type":"codeListing","syntax":"swift","code":["BlackBox.log(","    \"Geolocation service started\",","    userInfo: [\"accuracy\": \"low\"]","    level: .info,","    category: \"Location\"",")"]},{"anchor":"Loggers","level":2,"type":"heading","text":"Loggers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each logger can filter logs and measurements by levels. You can ask OSLogger to log only "},{"type":"codeVoice","code":".error"},{"type":"text","text":" level, but "},{"type":"codeVoice","code":"OSSignpostLogger"},{"type":"text","text":" to log "},{"type":"codeVoice","code":".debug"},{"type":"text","text":" and "},{"type":"codeVoice","code":".info"},{"type":"text","text":" levels."},{"type":"text","text":" "},{"type":"text","text":"This can be achieved by creating a new instance of logger:"}]},{"type":"codeListing","syntax":"swift","code":["let logger = OSLogger(levels: [.error]) \/\/ or any other desired levels"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"BlackBox automatically enables "},{"type":"codeVoice","code":"OSLogger"},{"type":"text","text":" and "},{"type":"codeVoice","code":"OSSignpostLogger"},{"type":"text","text":" with all available log levels."},{"type":"text","text":" "},{"type":"text","text":"You can customize this behaviour:"}]},{"type":"codeListing","syntax":"swift","code":["let loggers = [","    OSLogger(levels: .allCases),","    OSSignpostLogger(levels: [.debug, .info])","    YourCustomLogger()","]","BlackBox.instance = BlackBox(loggers: loggers)"]},{"anchor":"Available-loggers","level":2,"type":"heading","text":"Available loggers"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/OSLogger"},{"type":"text","text":" — logs to macOS Console.app"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/OSSignpostLogger"},{"type":"text","text":" — logs to Time Profiler"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/FSLogger"},{"type":"text","text":" — logs to text file. Doesn’t support filesize limits, use at your own risk."}]}]}]},{"anchor":"Custom-loggers","level":2,"type":"heading","text":"Custom loggers"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your own logger."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/BBLoggerProtocol"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add your logger to BlackBox:"}]}]}]},{"type":"codeListing","syntax":"swift","code":["BlackBox.instance = BlackBox(loggers: [YourCustomLogger()])"]},{"anchor":"Errors","level":2,"type":"heading","text":"Errors"},{"anchor":"Codes-and-User-Info","level":3,"type":"heading","text":"Codes and User Info"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift.Error doesn’t provide error code, unless it’s inherited from Int. But relying on inheriting from Int leads to collisions of error codes once you remove some cases from your custom Error."},{"type":"text","text":" "},{"type":"text","text":"If you are planning to gather analytics based on your errors you definetely do not want that behaviour."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can provide custom and fixed error codes and even user info by implementing "},{"type":"codeVoice","code":"CustomNSError"},{"type":"text","text":" and overriding both "},{"type":"codeVoice","code":"errorCode"},{"type":"text","text":" and "},{"type":"codeVoice","code":"errorUserInfo"},{"type":"text","text":" for your Errors."}]},{"type":"codeListing","syntax":"swift","code":["extension ParsingError: CustomNSError {","    var errorCode: Int {","        switch self {","        case .unknownCategoryInDTO:","            return 0","        }","    }","","    var errorUserInfo: [String : Any] {","        switch self {","        case .unknownCategoryInDTO(let rawValue):","            return [\"rawValue\": rawValue]","        }","    }","}"]},{"anchor":"Levels","level":3,"type":"heading","text":"Levels"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each Swift.Error is logged with "},{"type":"codeVoice","code":".error"},{"type":"text","text":" log level by default."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement "},{"type":"codeVoice","code":"BBLogLevelProvider"},{"type":"text","text":" to provide custom log levels for your errors"}]},{"type":"codeListing","syntax":"swift","code":["extension ParsingError: BBLogLevelProvider {","    var level: BBLogLevel {","        switch self {","        case .unknownCategoryInDTO(let rawValue):","            if rawValue == 2 { ","                \/\/ deprecated category, may be present in orders created before 2019","                return .warning","            } else {","                \/\/ unsupported category","                return .error","            }","        }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/blackbox\/readme"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BlackBox\/documentation\/BlackBox\/README","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Library for logs and measurements."}],"kind":"article","metadata":{"roleHeading":"Article","title":"BlackBox","role":"article","modules":[{"name":"BlackBox"}]},"hierarchy":{"paths":[["doc:\/\/BlackBox\/documentation\/BlackBox"]]},"references":{"doc://BlackBox/documentation/BlackBox/BBLoggerProtocol":{"role":"symbol","title":"BBLoggerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BBLoggerProtocol"}],"abstract":[{"type":"text","text":"Receives all possible logs from BlackBox"}],"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/BBLoggerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BBLoggerProtocol"}],"url":"\/documentation\/blackbox\/bbloggerprotocol"},"doc://BlackBox/documentation/BlackBox/OSLogger":{"role":"symbol","title":"OSLogger","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSLogger"}],"abstract":[{"type":"text","text":"Redirects logs to Console.app"}],"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/OSLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSLogger"}],"url":"\/documentation\/blackbox\/oslogger"},"doc://BlackBox/documentation/BlackBox":{"role":"collection","title":"BlackBox","abstract":[],"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox","kind":"symbol","type":"topic","url":"\/documentation\/blackbox"},"doc://BlackBox/documentation/BlackBox/FSLogger":{"role":"symbol","title":"FSLogger","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FSLogger"}],"abstract":[{"type":"text","text":"Redirects logs to text file"}],"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/FSLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FSLogger"}],"url":"\/documentation\/blackbox\/fslogger"},"doc://BlackBox/documentation/BlackBox/OSSignpostLogger":{"role":"symbol","title":"OSSignpostLogger","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSSignpostLogger"}],"abstract":[{"type":"text","text":"Redirects logs to Time Profiler"}],"identifier":"doc:\/\/BlackBox\/documentation\/BlackBox\/OSSignpostLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSSignpostLogger"}],"url":"\/documentation\/blackbox\/ossignpostlogger"}}}