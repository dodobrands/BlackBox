name: Unit Tests

on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: 'macos-latest'

    timeout-minutes: 10

    env:
      SCHEME: "BlackBox"

    strategy:
      matrix:
        DESTINATION: ["platform=iOS Simulator,name=iPhone 15", "platform=OS X", "platform=tvOS Simulator,name=Apple TV", "platform=watchOS Simulator,name=Apple Watch Ultra 2 (49mm)"]

    steps:
    - name: Get source code
      uses: actions/checkout@v4

    - name: Prepare Environment for App Build
      uses: ./.github/actions/prepare_env_app_build
        
    - name: Build
      run: >
        xcodebuild build-for-testing
        -scheme ${{ env.SCHEME }}
        -destination '${{ matrix.DESTINATION }}'
        -quiet

    - name: Test
      id: test
      run: |
        xcresult="${{ env.SCHEME }}-${{ matrix.DESTINATION }}.xcresult"
        xcodebuild test-without-building \
        -scheme ${{ env.SCHEME }} \
        -destination '${{ matrix.DESTINATION }}' \
        -resultBundlePath "$xcresult" \
        -quiet

        echo "xcresult=$xcresult" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        path: "${{ steps.test.outputs.xcresult }}"
        name: "${{ steps.test.outputs.xcresult }}"

  # This allows us to have a branch protection rule for tests and deploys with matrix
  status-for-matrix:
    runs-on: 'ubuntu-latest'
    needs: tests
    if: always()
    steps:
      - name: Calculate matrix result
        run: |
          result="${{ needs.tests.result }}"
          if [[ $result == "success" ]]; then
            exit 0
          else
            exit 1
          fi
